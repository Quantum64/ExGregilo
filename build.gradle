buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'

version = "1.1.0"
group= "co.q64.exgregilo" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "exgregilo"

minecraft {
    version = "1.7.10-10.13.4.1558-1.7.10"
    runDir = "eclipse"
}

configurations {
    embed
    compile.extendsFrom(embed)
}

repositories {
    maven {
        name 'tterrag'
        url 'http://maven.tterrag.com/'
    }
	maven {
        name 'curseforge'
        url "https://minecraft.curseforge.com/api/maven/"
	}
    maven { // This is needed to get my meta tools to compile
        name = "ic2, forestry"
        url = "http://maven.ic2.player.to/"
    }
    maven {
        name = "chickenbones"
        url = "http://chickenbones.net/maven/"
    }
	maven {
		name = "quantum"
		url = "http://quantum64.github.io/ExGregilo/"
	}
    maven { // EnderIO & EnderCore
        name 'tterrag Repo'
        url "http://maven.tterrag.com"
    }
    maven { // The repo from which to get waila
        name "Mobius Repo"
        url "http://mobiusstrip.eu/maven"
    }
    
}

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
      
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html
	
	compile "exnihilo:Ex-Nihilo:1.38-53:deobf"
    compile "codechicken:NotEnoughItems:1.7.10-1.0.5.120:dev"
	compile "com.enderio:EnderIO:1.7.10-2.3.0.417_beta:dev"
    compile "railcraft:RailCraft_1.7.10:9.12.2.0"
	compile "ex-astris:ExAstris-MC1.7.10:1.16-36"
	compile "ex-compressum:excompressum-mc1.7.10:1.1.149"
	compile "gregtech-5-unofficial:gregtech:5.09.31"
	compile "minetweaker3:MineTweaker3:1.7.10-3.0.10B"
	
	embed "com.google:guice:q64"
	embed "com.google:guice-multibindings:q64"
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
    from configurations.embed.collect { it.isDirectory() ? it : zipTree(it) }
}

task renameJar(type: Copy, dependsOn: assemble) {
	from "build/libs/"
	into "build/libs/"
	include "exgregilo-${version}.jar"
	rename "exgregilo-${version}.jar", "exgregilo-latest.jar"
}

build.dependsOn renameJar